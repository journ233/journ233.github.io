{"version":3,"file":"main.js","mappings":";AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AAAA;AAGA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;;AAUA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvEA","sources":["webpack://eleventy-webpack/webpack/bootstrap","webpack://eleventy-webpack/webpack/runtime/make namespace object","webpack://eleventy-webpack/./src/assets/scripts/index.js","webpack://eleventy-webpack/./src/assets/styles/index.scss?02c3"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// add csv to same directory as this file\n// import data from './example.csv';\n\n\nconst docReady = function(func) {\n  // https://stackoverflow.com/a/9899701\n    // see if DOM is already available\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    // call on next available tick\n    setTimeout(func, 1);\n  } else {\n    document.addEventListener('DOMContentLoaded', func);\n  }\n};\n\nconst debounce = function(func, wait, immediate) {\n  // https://davidwalsh.name/javascript-debounce-function\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\ndocReady(() => {\n\n\n  const lectures = document.querySelectorAll('.lecture'),\n    now = new Date();\n  \n  console.log(now);\n\n  lectures.forEach(element => {\n    const lectureDate = element.getAttribute('data-date'),\n      dateOptions = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hours: 'numeric',\n        minutes: 'numeric',\n        timeZone: 'pst'\n      },\n      d = new Date(`${ lectureDate }T17:00:00.0000-08:00`);\n      if (d <= now) {\n        element.classList.add('passed');\n      }\n    \n  });\n\n\n  // if (document.URL.indexOf('sync') > 0) {\n  //   const button = document.getElementById('generateUrl');\n  //   const generatedUrlEl = document.getElementById('generatedUrl');\n  //   button.addEventListener('click', e => {\n  //     const calId = document.getElementById('calId').value;\n  //     const url = `https://datahub.berkeley.edu/user/${ calId }/git-pull?repo=https://github.com/journ233/j233-files`\n  //     generatedUrlEl.innerHTML = `<a href=\"${ url }\" target=\"_blank\">Sync files</a>`;\n  //   });\n  // }\n  // const resizeFn = debounce(() => {\n  //   // resize code goes here\n  //   console.log('resize');\n  // }, 450);\n  // window.addEventListener('resize', resizeFn);\n});","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}